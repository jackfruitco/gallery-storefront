# Generated by Django 5.1.2 on 2024-12-04 01:27

import apps.gallery.models
import apps.store.context_processors
import autoslug.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name', unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('ARCHIVED', 'Archived')], default='ACTIVE', help_text='Enable to display this product in Site Gallery', max_length=10, verbose_name='Enable Site Gallery')),
                ('feature', models.BooleanField(default=True, help_text='Enable to display this product on the Homepage as a featured product.', verbose_name='Enable Featured Product')),
                ('shopify_sync', models.BooleanField(default=False, help_text="Enable to sync this product with Shopify Admin and make it available via the Shopify Online Store and Shopify POS. Please note, updates made via Shopify Admin will be overridden, and do not sync with this site's product database. A Shopify Access Token is required!", verbose_name='Enable ShopSync')),
                ('shopify_global_id', models.CharField(blank=True, editable=False, help_text='Shopify Global productID', max_length=100)),
                ('shopify_status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=10)),
                ('sku', models.CharField(blank=True, max_length=50)),
                ('price', models.FloatField(default=0, help_text="If item is not synced with Shopify, enter price as '0'.")),
                ('primary_color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.color')),
                ('category', models.ManyToManyField(to='gallery.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('feature_image', models.BooleanField(default=False, help_text="Enable to display this image as the featured image. The featured image is used as the product's primary image.Only select this for one image per product.")),
                ('description', models.CharField(help_text='3-5 words describing the image', max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='description', unique_with=('fk_product',))),
                ('image', models.ImageField(upload_to=apps.gallery.models.get_image_path)),
                ('resource_url', models.URLField(blank=True, help_text='Shopify resourceURL if uploaded to Shopify', max_length=500)),
                ('fk_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('shopify_id', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(help_text='e.g. "Color" or "Pattern"', max_length=100, verbose_name='Option Name')),
                ('position', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductOptionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(max_length=100)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.productoption')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.product')),
            ],
        ),
        migrations.AddField(
            model_name='productoption',
            name='values',
            field=models.ManyToManyField(blank=True, help_text='Values associated with this option (e.g. "Red",  "Blue", etc.', to='gallery.productoptionvalue', verbose_name='Option Values'),
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('shopify_id', models.CharField(blank=True, max_length=100)),
                ('inv_policy', models.CharField(choices=[('DENY', 'Deny'), ('CONTINUE', 'Continue')], default='DENY', max_length=100, verbose_name='Inventory Policy')),
                ('sku', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(max_length=100, verbose_name='Inventory Location')),
                ('inv_name', models.CharField(choices=[('available', 'Available'), ('on hand', 'On Hand')], default='available', max_length=100, verbose_name='Inventory Name')),
                ('quantity', models.IntegerField(default=1, verbose_name='Inventory Quantity')),
                ('price', models.FloatField(default=0, verbose_name='Price')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.product')),
            ],
        ),
    ]
