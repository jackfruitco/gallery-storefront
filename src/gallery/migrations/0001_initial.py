# Generated by Django 5.1.7 on 2025-03-23 20:58

import autoslug.fields
import django.db.models.deletion
from django.db import migrations, models

import gallery.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        always_update=True,
                        editable=False,
                        populate_from="name",
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="ACTIVE",
                        help_text="Enable to display this product in Site Gallery",
                        max_length=10,
                        verbose_name="Enable Site Gallery",
                    ),
                ),
                (
                    "feature",
                    models.BooleanField(
                        default=True,
                        help_text="Enable to display this product on the Homepage as a featured product.",
                        verbose_name="Enable Featured Product",
                    ),
                ),
                (
                    "shopify_sync",
                    models.BooleanField(
                        default=False,
                        help_text="Enable to automatically sync product with Shopify Admin.  Please note, updates made in Shopify Admin will be overridden, and do not sync with the product database. A Shopify Access Token is required!",
                        verbose_name="Enable ShopSync",
                    ),
                ),
                (
                    "shopify_global_id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Shopify Global productID",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "shopify_status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="DRAFT",
                        max_length=10,
                    ),
                ),
                (
                    "base_price",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="Variant pricing will override this.",
                        null=True,
                    ),
                ),
                ("sku", models.CharField(blank=True, max_length=50)),
                ("length", models.IntegerField(blank=True, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("weight", models.IntegerField(blank=True, null=True)),
                (
                    "length_unit",
                    models.CharField(
                        blank=True,
                        choices=[("IN", "Inches"), ("CM", "Centimeters")],
                        default="IN",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "width_unit",
                    models.CharField(
                        blank=True,
                        choices=[("IN", "Inches"), ("CM", "Centimeters")],
                        default="IN",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "height_unit",
                    models.CharField(
                        blank=True,
                        choices=[("IN", "Inches"), ("CM", "Centimeters")],
                        default="IN",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "weight_unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LB", "Pounds"),
                            ("OZ", "Ounces"),
                            ("G", "Grams"),
                            ("KG", "Kilograms"),
                        ],
                        default="OZ",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("category", models.ManyToManyField(to="gallery.productcategory")),
            ],
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "description",
                    models.CharField(
                        help_text="3-5 words describing the image", max_length=100
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        always_update=True,
                        editable=False,
                        populate_from="description",
                        unique_with=("fk_product",),
                    ),
                ),
                (
                    "original",
                    models.ImageField(
                        height_field="original_height",
                        upload_to=gallery.models.get_image_path,
                        verbose_name="image",
                        width_field="original_width",
                    ),
                ),
                (
                    "original_height",
                    models.PositiveIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "original_width",
                    models.PositiveIntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "feature_image",
                    models.BooleanField(
                        default=False,
                        help_text="Enable to display image as the featured image. The featured image is used as the product's primary image",
                    ),
                ),
                (
                    "resource_url",
                    models.URLField(
                        blank=True,
                        help_text="Shopify resourceURL if uploaded to Shopify",
                        max_length=500,
                    ),
                ),
                (
                    "fk_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gallery.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("position", models.IntegerField()),
                (
                    "name",
                    models.CharField(
                        help_text='e.g. "Color" or "Pattern"',
                        max_length=100,
                        verbose_name="Option Name",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gallery.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductOptionValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "value",
                    models.CharField(max_length=100, verbose_name="Option Value"),
                ),
                (
                    "option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gallery.productoption",
                        verbose_name="Option Name",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="productoption",
            name="values",
            field=models.ManyToManyField(
                blank=True,
                help_text='Values for this Option (e.g. "Red", "Blue", etc.',
                to="gallery.productoptionvalue",
                verbose_name="Option Values",
            ),
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("shopify_id", models.CharField(blank=True, max_length=100)),
                (
                    "inv_policy",
                    models.CharField(
                        choices=[("DENY", "Deny"), ("CONTINUE", "Continue")],
                        default="DENY",
                        help_text="When a product has no inventory available, this policy determines if new orders should continue to process, or be denied.",
                        max_length=100,
                        verbose_name="Inventory Policy",
                    ),
                ),
                ("sku", models.CharField(blank=True, max_length=100)),
                (
                    "location",
                    models.CharField(max_length=100, verbose_name="Inventory Location"),
                ),
                (
                    "oh_quantity",
                    models.IntegerField(default=1, verbose_name="On Hand Quantity"),
                ),
                ("price", models.FloatField(default=0, verbose_name="Variant Price")),
                (
                    "inv_name",
                    models.CharField(
                        choices=[("available", "Available"), ("on hand", "On Hand")],
                        default="available",
                        max_length=100,
                        verbose_name="Inventory Name",
                    ),
                ),
                (
                    "options",
                    models.ManyToManyField(
                        blank=True,
                        to="gallery.productoptionvalue",
                        verbose_name="Options",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gallery.product",
                    ),
                ),
            ],
        ),
    ]
